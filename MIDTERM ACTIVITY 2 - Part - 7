// Cylinder class inheriting Circle class and implements ThreeD interface
class Cylinder extends Circle implements ThreeD{
   // Instance variable named height
   private double height;
        
   // Default Constructor and parameterized constructor
   public Cylinder () {
      super();
      this.height = 0; 
   }
      
   public Cylinder (double radius, double height) {
      super(radius);
      this.height = height;
   }
      
   // Getters and Setters
   public void setRadius(double radius) {
      super.setRadius(radius);
   }
      
   public double getRadius() {
      return super.getRadius();
   }
      
   public void setHeight(double height){
      this.height = height;
   }
      
   public double getHeight(double height) {
      return height;
   }
         
   // Override methods that calculates the area of Cylinder by 2 times pi times radius times height and displays the cylinder height and radius
   public double getArea() {
      return 2 * Math.PI * super.getRadius() * (super.getRadius() + height);
   }
           
   public double getVolume() {
      return super.getArea() * height;
   } 
           
   public String toString() {
      return "The Cylinder's height is " + height + " and the radius is " + super.getRadius();
   } 
   
   // Checks if the current cylinder's height and radius are equal to objects cylinder's height and radius        
   public boolean equals(Object obj) {
      if (this == obj) return true;
      if (obj == null || getClass() != obj.getClass()) return false;
      Cylinder cylinder = (Cylinder) obj;
      return Double.compare(cylinder.height, height) == 0 && super.equals(obj);
   }
}
