abstract class Shape {

   /*
      Shape <abstract>
      +getArea():double
      +toString():String
-------------------------------------
      ThreeD <interface>
      +getVolume():double
   */
   
   abstract double getArea();
   
   public String toString() {
      return "Shape";
   }
   
   interface ThreeD {
      double getVolume();
   } 
}

public class Square extends Shape {
   /*
   Square extends Shape
   -side:double
   +Square()
   +Square(double side)
   +setSide(double side):void
   +getSide():double
   +getArea():double
   +toString():String
   +equals(Square s):boolean
   */
   
   public double side;
   
   public Square () {
      this.side=1.0;
   }
   
   public Square(double side) {
      this.side=side;
   }
   
   public void setSide(double side) {
      this.side=side;
   }
   
   public double getSide() {
      return side;
   }
   
   double getArea() {
      return side * side;
   }
   
   public String toString() {
      return "Square with side length of " + side;
   }
   
   public boolean equals(Square s) {
      return this.side == s.side;
   } 
}

public class Cube extends Square implements ThreeD {
  
   /*
   Cube extends Square implements
   ThreeD
   +Cube()
   +Cube(double side)
   +setSide(double side):void
   +getSide():double
   +getArea():double
   +getVolume():double
   */
   
   public Cube() {
      super();
   }
   
   public Cube(double side){
      super(side);
   }
   
   public void setSide(double side) {
      super.setSide(side);
   
   }
   double getArea() {
      return 6 * super.getArea();
   }
   
   public double getVolume() {
      return super.getArea() * getSide();
   }
}

public class Circle extends Shape {
   /*
         Circle extends Shape
         -radius:double
         +Circle()
         +Circle(double radius)
         +setRadius(double
         radius):void
         +getRadius():double
         +getArea():double
         String toString():boolean
         +equals(Circle c):boolean
   */   
   
   public double radius;
   
   public Circle() {
      this.radius=2.0;
   }
   
   public Circle(double radius) {
      this.radius=radius;
   }
   
   public void setRadius(double radius) {
      this.radius=radius;
   }
   
   public double getRadius() {
      return radius;
   }
   
   double getArea() {
      return radius * radius;
   }
   
   public String toString() {
      return "The radius of the Circles is " + radius;
   }
   
   public boolean equals (Circle r) {
      return this.radius == r.radius;
   }
}

public class Sphere extends Circle {
   /*
      Sphere extends Circle
      implements ThreeD
      
      +Sphere()
      +Sphere(double radius)
      +setRadius(double
      radius):void
      +getRadius():double
      +getArea():double
      +getVolume():double
      +toString():String
      +equals(Sphere s):boolean
   */
   
   
}
